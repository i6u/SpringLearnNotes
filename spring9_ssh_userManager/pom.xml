<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>zyr.learn.spring</groupId>
    <artifactId>SSH-UserManager</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>SSH-UserManager Maven Webapp</name>
    <url>http://maven.apache.org</url>

    <properties>
        <struts.version>2.5.5</struts.version>
        <spring.version>4.1.6.RELEASE</spring.version>
        <hibernate.version>4.3.1.Final</hibernate.version>
        <druid.version>1.0.26</druid.version>
        <mysql.connection.version>6.0.5</mysql.connection.version>
        <junit.version>4.10</junit.version>
        <aspectj.version>1.8.9</aspectj.version>
    </properties>


    <dependencies>
        <!--加入Struts2的依赖-->
        <dependency>
            <groupId>org.apache.struts</groupId>
            <artifactId>struts2-core</artifactId>
            <version>${struts.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>javassist</artifactId>
                    <groupId>org.javassist</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-io</artifactId>
                    <groupId>commons-io</groupId>
                </exclusion>
            </exclusions>
            <!--<exclusions>-->
                <!--<exclusion>-->
                    <!--<artifactId>javassist</artifactId>-->
                    <!--<groupId>org.javassist</groupId>-->
                <!--</exclusion>-->
                <!--<exclusion>-->
                    <!--<artifactId>commons-io</artifactId>-->
                    <!--<groupId>commons-io</groupId>-->
                <!--</exclusion>-->
            <!--</exclusions>-->
        </dependency>
        <dependency>
            <groupId>org.apache.struts</groupId>
            <artifactId>struts2-spring-plugin</artifactId>
            <version>${struts.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.glassfish.web/jstl-impl -->
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>jstl-impl</artifactId>
            <version>1.2</version>
        </dependency>



        <!--加入spring的依赖-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!--spring 事务-->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
        </dependency>

        <!--hibernate依赖-->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <!--数据池 druid-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${druid.version}</version>
        </dependency>
        <!--mysql connection-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.connection.version}</version>
        </dependency>
        <!--junit-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/jsptags/pager-taglib -->
        <dependency>
            <groupId>jsptags</groupId>
            <artifactId>pager-taglib</artifactId>
            <version>2.0</version>
        </dependency>
    </dependencies>
    <build>
        <finalName>SSH-UserManager</finalName>
        <plugins>
            <!-- 配置加入jetty服务器，开发时我们一般使用jetty服务器 -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.3.0.M2</version>
                <configuration>
                    <httpConnector>
                        <!--
                            jetty 默认使用的端口是 8080，命令行的方式修改端口的命令是：mvn -Djetty.port=8081 jetty:run
                        -->
                        <port>8080</port>
                    </httpConnector>
                    <stopKey>shutdown</stopKey>
                    <stopPort>9966</stopPort>
                    <!-- 设置扫描target/classes内部文件变化时间间隔
                        默认值是 0。大于 0 的数值表示开启，0 表示关闭，单位为秒。以配置数值为一个周期，自动的扫描文件检查其内容是否有变化，如果发现文件的
                        内容被改变，则自动重新部署运用。
                        命令行的方式：mvn -Djetty.scanIntervalSeconds=2 jetty:run

                    <scanIntervalSeconds>2</scanIntervalSeconds>
                    -->
                    <!--
                        默认值为 automatic，它与大于 0 的 scanIntervalSeconds 节点一起作用，实现自动热部署的工作。设为 manual 的好处是，当你改变文件
                        内容并保存时，不会马上触发自动扫描和重部署的动作，你还可以继续的修改，直至你在 Console 或命令行中敲回车键（Enter）的时候才触发重
                        新加载的动作。这样可以更加的方便调试修改。
                        命令行的方式是：mvn -Djetty.reload=manual jetty:run
                    -->
                    <reload>manual</reload>
                    <!--dumpOnStart 默认值为 false，如果设为 true，jetty 在启动时会把当前服务进程的内存信息输出到控制台中，但这并不会保存到文件中
                    <dumpOnStart>true</dumpOnStart>
                    -->
                    <webApp>
                        <contextPath>/userManager</contextPath>
                        <!--项目的静态资源文件目录默认是 src/main/webapp
                        <resourceBases>
                            <resourceBase>${project.basedir}/src/main/webapp</resourceBase>
                            <resourceBase>${project.basedir}/commons</resourceBase>
                        </resourceBases>
                        -->
                    </webApp>

                    <!--
                        filename：日志文件的名称
                        filenameDateFormat：日志文件的名称的日期格式，它要求日志文件名必须含有 yyyy_mm_dd 串
                        logDateFormat：日志内容的时间格式
                        logTimeZone：时区
                        append：追加到日志
                        logServer：记录访问的主机名
                        retainDays：日志文件保存的天数, 超过删除
                        logCookies：记录 cookies

                    <requestLog implementation="org.eclipse.jetty.server.NCSARequestLog">
                        <filename>target/access-yyyy_mm_dd.log</filename>
                        <filenameDateFormat>yyyy_MM_dd</filenameDateFormat>
                        <logDateFormat>yyyy-MM-dd HH:mm:ss</logDateFormat>
                        <logTimeZone>GMT+8:00</logTimeZone>
                        <append>true</append>
                        <logServer>true</logServer>
                        <retainDays>120</retainDays>
                        <logCookies>true</logCookies>
                    </requestLog>
                    -->
                </configuration>
            </plugin>
            <!-- compiler插件, 设定JDK版本 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
